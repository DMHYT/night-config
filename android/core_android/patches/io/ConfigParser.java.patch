--- core/src/main/java/com/electronwill/nightconfig/core/io/ConfigParser.java
+++ android/core_android/src/main/java/com/electronwill/nightconfig/core/io/ConfigParser.java
@@ -10,8 +10,7 @@
 import java.net.URLConnection;
 import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
-import java.nio.file.Files;
-import java.nio.file.Path;
+// java.nio.charset is available, even in Android < 8
 
 /**
  * Interface for reading configurations.
@@ -118,7 +117,6 @@
 	 *
 	 * @param file the file to parse
 	 * @return a Config
-	 *
 	 * @throws ParsingException if an error occurs
 	 */
 	default C parse(File file, FileNotFoundAction nefAction) {
@@ -130,55 +128,9 @@
 	 *
 	 * @param file the file to parse
 	 * @return a Config
-	 *
 	 * @throws ParsingException if an error occurs
 	 */
 	default C parse(File file, FileNotFoundAction nefAction, Charset charset) {
-		return parse(file.toPath(), nefAction, charset);
-	}
-
-	/**
-	 * Parses a configuration with the UTF-8 charset.
-	 *
-	 * @param file        the file to parse
-	 * @param destination the config where to put the data
-	 * @throws ParsingException if an error occurs
-	 */
-	default void parse(File file, Config destination, ParsingMode parsingMode, FileNotFoundAction nefAction) {
-		parse(file, destination, parsingMode, nefAction, StandardCharsets.UTF_8);
-	}
-
-	/**
-	 * Parses a configuration.
-	 *
-	 * @param file        the file to parse
-	 * @param destination the config where to put the data
-	 * @throws ParsingException if an error occurs
-	 */
-	default void parse(File file, Config destination, ParsingMode parsingMode,
-					   FileNotFoundAction nefAction, Charset charset) {
-		parse(file.toPath(), destination, parsingMode, nefAction, charset);
-	}
-
-	/**
-	 * Parses a configuration with the UTF-8 charset.
-	 *
-	 * @param file the nio Path to parse
-	 * @return a Config
-	 * @throws ParsingException if an error occurs
-	 */
-	default C parse(Path file, FileNotFoundAction nefAction) {
-		return parse(file, nefAction, StandardCharsets.UTF_8);
-	}
-
-	/**
-	 * Parses a configuration.
-	 *
-	 * @param file the nio Path to parse
-	 * @return a Config
-	 * @throws ParsingException if an error occurs
-	 */
-	default C parse(Path file, FileNotFoundAction nefAction, Charset charset) {
 		try {
 			if(Files.notExists(file) && !nefAction.run(file, getFormat())) {
 				return getFormat().createConfig();
@@ -194,22 +146,22 @@
 	/**
 	 * Parses a configuration with the UTF-8 charset.
 	 *
-	 * @param file     the nio Path to parse
+	 * @param file     the file to parse
 	 * @param destination the config where to put the data
 	 * @throws ParsingException if an error occurs
 	 */
-	default void parse(Path file, Config destination, ParsingMode parsingMode, FileNotFoundAction nefAction) {
+	default void parse(File file, Config destination, ParsingMode parsingMode, FileNotFoundAction nefAction) {
 		parse(file, destination, parsingMode, nefAction, StandardCharsets.UTF_8);
 	}
 
 	/**
 	 * Parses a configuration.
 	 *
-	 * @param file     the nio Path to parse
+	 * @param file     the file to parse
 	 * @param destination the config where to put the data
 	 * @throws ParsingException if an error occurs
 	 */
-	default void parse(Path file, Config destination, ParsingMode parsingMode,
+	default void parse(File file, Config destination, ParsingMode parsingMode,
 					   FileNotFoundAction nefAction, Charset charset) {
 		try {
 			if (Files.notExists(file) && !nefAction.run(file, getFormat())) {
